package entities;
import org.apache.commons.lang3.RandomStringUtils;

import java.io.Serial;
import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;
import java.util.stream.Collectors;
import java.util.stream.IntStream;

public class Passenger implements Serializable {
    @Serial
    private static final long serialVersionUID = -3109893404888493359L;

    private final String name;
    private final String surname;


    //constructors
    public Passenger(String name, String surname) {
        this.name = name;
        this.surname = surname;
    }


    //methods
    //static methods
    /*
     * returns a random Passenger whose:
     * * name and surname is a random alphabetical String of a random length between 3 (inc.) and 10 (exc.).
     */
    public static Passenger getRandom() {
        return new Passenger(RandomStringUtils.randomAlphabetic(3, 10),
                RandomStringUtils.randomAlphabetic(3, 10));
    }

    /*
     * returns a modifiable List of random Passengers of specified length,
     * generated by calling Passenger.getRandom()
     * * count - the size of the list to be returned
     */
    public static List<Passenger> getRandom(int count) {
        return IntStream.range(0, count)
                .mapToObj(i -> getRandom())
                .collect(Collectors.toCollection(ArrayList::new));
    }

    //instance methods
    //equals and hashcode
    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;
        Passenger passenger = (Passenger) o;
        return Objects.equals(name, passenger.name) && Objects.equals(surname, passenger.surname);
    }

    @Override
    public int hashCode() {
        return Objects.hash(name, surname);
    }

    @Override
    public String toString() {
        return String.format("%s %s", name, surname);
    }
}
